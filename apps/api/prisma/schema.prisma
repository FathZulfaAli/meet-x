generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Sample {
  id        Int      @id @default(autoincrement())
  name      String
  code      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("samples")
}

model Customer {
  customer_id  Int              @unique @default(autoincrement())
  name         String
  email        String           @unique
  password     String
  ref_code     String           @unique
  use_ref_code String?
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  RefCustId    ReferralPoints[] @relation("cust-id")
  ReferralCode ReferralPoints[] @relation("ref-code")

  @@map("customer")
}

model EventOrganizer {
  EventOrganizer_id Int      @unique @default(autoincrement())
  name              String
  email             String   @unique
  password          String
  organizer_name    String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("event_organizer")
}

model ReferralPoints {
  id                Int      @id @unique @default(autoincrement())
  customer_id       Int
  referral_code     String
  expired_date      DateTime
  Customer          Customer @relation("cust-id", fields: [customer_id], references: [customer_id])
  Customer_ref_code Customer @relation("ref-code", fields: [referral_code], references: [ref_code])

  @@index([customer_id], map: "referral_points_customer_id_fkey")
  @@index([referral_code], map: "referral_points_referral_code_fkey")
  @@map("referral_points")
}

model auth {
  id       Int    @id @unique(map: "id") @default(autoincrement())
  email    String @unique(map: "email") @db.VarChar(255)
  password String @db.VarChar(255)
  role     Role
}

model eventOrganizer {
  eo_id        Int       @id @unique(map: "eo_id") @default(autoincrement())
  first_name   String    @db.VarChar(255)
  last_name    String?   @db.VarChar(255)
  company_name String    @db.VarChar(255)
  email        String    @unique(map: "email") @db.VarChar(255)
  password     String    @db.VarChar(255)
  created_at   DateTime  @default(now()) @db.Timestamp(0)
  updated_at   DateTime? @db.Timestamp(0)
}

enum Role {
  Customer
  Seller
}
